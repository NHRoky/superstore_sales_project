
create database store_db;
use store_db;
select *
from superstore_sales_data1 limit 10;
-- total data --9033
select 
count(*)
from superstore_sales_data1;

select 
count(*)
from superstore_sales_data1
where profit <0 or profit is null;
-- error data in database--4365

update superstore_sales_data1
set profit = abs(profit)
where profit <0 or profit is null;
 SET SQL_SAFE_UPDATES = 0;
  -- update data --4365
  
  SELECT *   from superstore_sales_data1
  ORDER BY ORDER_DATE DESC;
  
 SELECT 
    Customer_ID,
    Customer_Name,
    YEAR(STR_TO_DATE(Order_Date, '%m/%d/%Y')) AS Year,
    MONTHNAME(STR_TO_DATE(Order_Date, '%m/%d/%Y')) AS Month,
     day(STR_TO_DATE(Order_Date, '%m/%d/%Y')) AS day
FROM superstore_sales_data1;
  -- CONVERTING DATE FORMATE 
  
  
  /*RFM Segment the Customer based on their Recency(R),Frequency(F),& Monetary(m)*/
   CREATE OR REPLACE VIEW SUPERSTORE_SCORE_DATA AS      -- USE VIEW FUNCTION
  WITH CUSTOMER_AGGREGATE_DATA AS -- common table expration (cte)
  (SELECT 
CUSTOMER_ID,
DATEDIFF((SELECT MAX(STR_TO_DATE(Order_Date, '%m/%d/%Y')) FROM superstore_sales_data1 ), MAX(STR_TO_DATE(Order_Date, '%m/%d/%Y'))) AS RECENCY_VALUE,
COUNT(DISTINCT Order_ID) AS FREQUENCY_value,
ROUND(SUM(SALES),0) AS MONETARY_VALUE
FROM superstore_sales_data1
GROUP BY CUSTOMER_ID),

SUPERSTORE_SCORE AS
(select 
C.*,
NTILE(4) OVER (ORDER BY RECENCY_VALUE DESC) AS R_SCORE,  -- WINDOW FUNCTION (NTILE)
NTILE(4) OVER (ORDER BY FREQUENCY_VALUE ASC) AS F_SCORE,
NTILE(4) OVER (ORDER BY MONETARY_VALUE ASC) AS M_SCORE
from CUSTOMER_AGGREGATE_DATA AS C)
SELECT 
S.CUSTOMER_ID,
S.RECENCY_VALUE,
R_SCORE,
S.FREQUENCY_VALUE,
F_SCORE,
S.MONETARY_VALUE,
M_SCORE,
 (R_SCORE + F_SCORE + M_SCORE) AS TOTAL_SUPERSTORE_SCORE,
 CONCAT_WS('', R_SCORE, F_SCORE, M_SCORE) AS SUPERSTORE_SCORE_COMBINITION
FROM SUPERSTORE_SCORE AS S;

SELECT * FROM SUPERSTORE_SCORE_DATA WHERE SUPERSTORE_SCORE_COMBINITION = '111';

SELECT SUPERSTORE_SCORE_COMBINITION FROM SUPERSTORE_SCORE_DATA;

CREATE OR REPLACE  VIEW SUPERSTORE_SCORE_DATA  AS  -- USE VIEW FUNCTION
SELECT 
 SUPERSTORE_SCORE_DATA.*,
 CASE
 WHEN SUPERSTORE_SCORE_COMBINITION IN (111, 112, 121, 132, 211, 212, 114, 141) THEN 'CHURNED CUSTOMER' 
  WHEN SUPERSTORE_SCORE_COMBINITION IN (133, 134, 143, 24, 334, 343, 344, 144) THEN 'SLIPPING AWAY,CANNOT LOSE CUSTOMER' 
   WHEN SUPERSTORE_SCORE_COMBINITION IN (311, 411, 331) THEN 'NEW CUSTOMER' 
    WHEN SUPERSTORE_SCORE_COMBINITION IN (222, 213, 221, 223, 233, 322) THEN 'POTENTIAL CUSTOMERS' 
     WHEN SUPERSTORE_SCORE_COMBINITION IN (323, 333, 321, 341, 422, 332, 432) THEN 'ACTIVE CUSTOMER' 
      WHEN SUPERSTORE_SCORE_COMBINITION IN (433, 434, 443, 444) THEN 'LOYAL CUSTOMER'
      ELSE 'CANNOT BE DEFIND'
      END AS CUSTOMER_SEGMENT
      FROM SUPERSTORE_SCORE_DATA;
      
      RENAME TABLE SUPERSTORE_SCORE_DATA TO SUPERSTORE_SCORE_DATA_ANALYSIS; -- CHANGE VIEW NAME 
       select *
       FROM SUPERSTORE_SCORE_DATA_ANALYSIS;
      DROP VIEW SUPERSTORE_DATA_ANALYSIS; -- DELETE OLD VIEW 
      
-- FIND AVARAGE MONETARY_VALUE, FREQUENCY_VALUE, RECENCY_VALUE 
 SELECT 
 CUSTOMER_SEGMENT,
 COUNT(*) AS CNUMBER_OF_CUSTOMERS,
 ROUND(AVG (MONETARY_VALUE)) AS AVRAGE_MONETARY_VALUE,
 ROUND(AVG (FREQUENCY_VALUE)) AS AVRAGE_FREQUENCY_VALUEE,
 ROUND(AVG (RECENCY_VALUE)) AS AVRAGE_RECENCY_VALUE
 FROM SUPERSTORE_SCORE_DATA_ANALYSIS
 GROUP BY CUSTOMER_SEGMENT;
 

 
 
 
 